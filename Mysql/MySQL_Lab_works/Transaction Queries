 SHOW DATABASES;
+--------------------+
| Database           |
+--------------------+
| college            |
| fidaa              |
| information_schema |
| library            |
| movie              |
| mysql              |
| office             |
| performance_schema |
| school             |
| sys                |
| tuition            |
+--------------------+

To create a database as 'school_management' :

CREATE DATABASE school_management;

To select a database :

USE school_management;

Database changed

Table 1 named as user: 

 CREATE TABLE user(id tinyint primary key  auto_increment, name varchar(30) not null);


 DESC user;
+-------+-------------+------+-----+---------+----------------+
| Field | Type        | Null | Key | Default | Extra          |
+-------+-------------+------+-----+---------+----------------+
| id    | tinyint     | NO   | PRI | NULL    | auto_increment |
| name  | varchar(30) | NO   |     | NULL    |                |
+-------+-------------+------+-----+---------+----------------+


Table 2 named as batches :

CREATE TABLE batches(id tinyint , name varchar(30) not null ,foreign key(id)  REFERENCES user(id)) ;

 DESC batches;
+-------+-------------+------+-----+---------+----------------+
| Field | Type        | Null | Key | Default | Extra          |
+-------+-------------+------+-----+---------+----------------+
| id    | tinyint     | NO   | MUL | NULL    |                |
| name  | varchar(30) | NO   |     | NULL    |                |
+-------+-------------+------+-----+---------+----------------+


Table 3 named as course :

 CREATE TABLE course(id tinyint, course_name varchar(30) not null ,foreign key(id)  REFERENCES user(id)) ;


 DESC course;
+-------------+-------------+------+-----+---------+----------------+
| Field       | Type        | Null | Key | Default | Extra          |
+-------------+-------------+------+-----+---------+----------------+
| id          | tinyint     | NO   | MUL | NULL    |                |
| course_name | varchar(30) | NO   |     | NULL    |                |
+-------------+-------------+------+-----+---------+----------------+


Inserting the values into the user table :

INSERT INTO user VALUES ( null, 'Anu'),(null,'Sangeetha'),(null, 'Surya'),(null,'Ismail'),(null,'Vaishu'),(null,'Ajay');

SELECT * FROM user;
+----+-----------+
| id | name      |
+----+-----------+
|  1 | Anu       |
|  2 | Sangeetha |
|  3 | Surya     |
|  4 | Ismail    |
|  5 | vaishu    |
|  6 | Ajay      |
+----+-----------+


Inserting the values into the batches table :

 INSERT INTO batches VALUES ( null, 'Batch1'),(null, 'Batch2'),(null,'Batch1'),(null,'Batch1'),(null,'Batch1');



 SELECT * FROM batches;
+----+--------+
| id | name   |
+----+--------+
|  1 | Batch1 |
|  2 | Batch2 |
|  3 | Batch1 |
|  4 | Batch1 |
|  5 | Batch1 |
+----+--------+



Inserting the values into the course table :

INSERT INTO course VALUES (1,'HTML'),(2,'CSS'),(3,'Js'),(4,'HTML'),(5,'HTML'),(6,'HTML');


 SELECT * FROM course;
+----+-------------+
| id | course_name |
+----+-------------+
|  1 | HTML        |
|  2 | CSS         |
|  3 | JS          |
|  4 | HTML        |
|  5 | HTML        |
|  6 | HTML        |
+----+-------------+



Table 4 named as batch_user :

CREATE TABLE batch_user (id tinyint auto_increment primary key, batch_id tinyint , foreign key(batch_id) REFERENCES batches(id), user_id tinyint, foreign key(user_id) REFERENCES user(id) );



 DESC batch_user;
+----------+---------+------+-----+---------+----------------+
| Field    | Type    | Null | Key | Default | Extra          |
+----------+---------+------+-----+---------+----------------+
| id       | tinyint | NO   | PRI | NULL    | auto_increment |
| batch_id | tinyint | YES  | MUL | NULL    |                |
| user_id  | tinyint | YES  | MUL | NULL    |                |
+----------+---------+------+-----+---------+----------------+


Inserting the values into the  batche_user :

INSERT INTO batch_user VALUES (1,1,1),(2,1,2);



Table 5 named as batch_courses :

CREATE TABLE batch_courses (id tinyint primary key auto_increment, batch_id tinyint, foreign key(batch_id) references batches(id),course_id tinyi
nt, foreign key(course_id) references course(id)   );


 DESC batch_courses;
+-----------+---------+------+-----+---------+----------------+
| Field     | Type    | Null | Key | Default | Extra          |
+-----------+---------+------+-----+---------+----------------+
| id        | tinyint | NO   | PRI | NULL    | auto_increment |
| batch_id  | tinyint | YES  | MUL | NULL    |                |
| course_id | tinyint | YES  | MUL | NULL    |                |
+-----------+---------+------+-----+---------+----------------+


Inserting the values into the  batche_courses :

INSERT INTO batch_courses VALUES (null,1,2),(2,1,1);


SELECT * FROM batch_courses;
+----+----------+-----------+
| id | batch_id | course_id |
+----+----------+-----------+
|  1 |        1 |         2 |
|  2 |        1 |         1 |
+----+----------+-----------+

To list all the tables :

 SHOW TABLES;
+-----------------------------+
| Tables_in_school_management |
+-----------------------------+
| batch_courses               |
| batch_user                  |
| batches                     |
| course                      |
| user                        |
+-----------------------------+


SELECT batch_user.id , batches.name, user.name FROM  batches INNER JOIN user  ON user.id = batches.id INNER JOIN batch_user ON batch_user.id = batches.id;

+----+--------+------+
| id | name   | name |
+----+--------+------+
|  1 | Batch1 | Anu  |
+----+--------+------+


SELECT course.course_name , batches.name, user.name FROM  batches INNER JOIN user  ON user.id = batches.id INNER JOIN course ON course.id = batches.id WHERE course.course_name= 'HTML';
+-------------+--------+--------+
| course_name | name   | name   |
+-------------+--------+--------+
| HTML        | Batch1 | Anu    |
| HTML        | Batch1 | Ismail |
| HTML        | Batch1 | vaishu |
+-------------+--------+--------+


